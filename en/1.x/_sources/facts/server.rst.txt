Server Facts
------------

:code:`server.Arch`
~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Arch)


Returns the system architecture according to ``uname``.



:code:`server.Command`
~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Command, command)


Returns the raw output lines of a given command.



:code:`server.Crontab`
~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Crontab, user=None)


Returns a dictionary of cron command -> execution time.

.. code:: python

    {
        '/path/to/command': {
            'minute': '*',
            'hour': '*',
            'month': '*',
            'day_of_month': '*',
            'day_of_week': '*',
        },
        'echo another command': {
            'special_time': '@daily',
        },
    }



:code:`server.Date`
~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Date)


Returns the current datetime on the server.



:code:`server.Groups`
~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Groups)


Returns a list of groups on the system.



:code:`server.HasGui`
~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(HasGui)


Returns a boolean indicating the remote side has GUI capabilities. Linux only.



:code:`server.Home`
~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Home)


Returns the home directory of the current user.



:code:`server.Hostname`
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Hostname)


Returns the current hostname of the server.



:code:`server.Kernel`
~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Kernel)


Returns the kernel name according to ``uname``.



:code:`server.KernelModules`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(KernelModules)


Returns a dictionary of kernel module name -> info.

.. code:: python

    {
        'module_name': {
            'size': 0,
            'instances': 0,
            'state': 'Live',
        },
    }



:code:`server.KernelVersion`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(KernelVersion)


Returns the kernel version according to ``uname``.



:code:`server.LinuxDistribution`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(LinuxDistribution)


Returns a dict of the Linux distribution version. Ubuntu, Debian, CentOS,
Fedora & Gentoo currently. Also contains any key/value items located in
release files.

.. code:: python

    {
        'name': 'Ubuntu',
        'major': 20,
        'minor': 04,
        'release_meta': {
            'CODENAME': 'focal',
            'ID_LIKE': 'debian',
            ...
        }
    }



:code:`server.LinuxGui`
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(LinuxGui)


Returns a list of available Linux GUIs.



:code:`server.LinuxName`
~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(LinuxName)


Returns the name of the Linux distribution. Shortcut for
``host.get_fact(LinuxDistribution)['name']``.



:code:`server.LsbRelease`
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(LsbRelease)


Returns a dictionary of release information using ``lsb_release``.

.. code:: python

    {
        "id": "Ubuntu",
        "description": "Ubuntu 18.04.2 LTS",
        "release": "18.04",
        "codename": "bionic",
        ...
    }



:code:`server.MacosVersion`
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(MacosVersion)


Returns the installed MacOS version.



:code:`server.Mounts`
~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Mounts)


Returns a dictionary of mounted filesystems and information.

.. code:: python

    {
        "/": {
            "device": "/dev/mv2",
            "type": "ext4",
            "options": [
                "rw",
                "relatime"
            ]
        },
    }



:code:`server.Os`
~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Os)


Returns the OS name according to ``uname``.

.. warning::
    This fact is deprecated/renamed, please use the ``kernel`` fact.



:code:`server.OsVersion`
~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(OsVersion)


Returns the OS version according to ``uname``.

.. warning::
    This fact is deprecated/renamed, please use the ``kernel_version`` fact.



:code:`server.Path`
~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Path)


Returns the path environment variable of the current user.



:code:`server.Selinux`
~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Selinux)


Discovers the SELinux related facts on the target host.

.. code:: python

    {
        'mode': 'enabled',
    }



:code:`server.Sysctl`
~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Sysctl)


Returns a dictionary of sysctl settings and values.

.. code:: python

    {
        "fs.inotify.max_queued_events": 16384,
        "fs.inode-state": [
            44565,
            360,
        ],
    }



:code:`server.User`
~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(User)


Returns the name of the current user.



:code:`server.Users`
~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Users)


Returns a dictionary of users -> details.

.. code:: python

    {
        'user_name': {
            'comment': 'Full Name',
            'home': '/home/user_name',
            'shell': '/bin/bash,
            'group': 'main_user_group',
            'groups': [
                'other',
                'groups'
            ],
            'uid': user_id,
            'gid': main_user_group_id,
        },
    }



:code:`server.Which`
~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(Which, command)


Returns the path of a given command, if available.


